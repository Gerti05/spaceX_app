{"version":3,"sources":["logo.png","components/launchItem.js","components/missionKey.js","components/launches.js","components/launch.js","App.js","index.js"],"names":["module","exports","launchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","format","to","missionKey","LAUNCHES_QUERY","gql","launches","query","loading","error","data","console","log","map","key","Component","LAUNCH_QUERY","this","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","marginTop","exact","path","component","Launches","Launch","ReactDOM","render","document","getElementById"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,mQCiC5BC,EA5BI,SAAC,GAEb,IAAD,IADJC,OAAUC,EACN,EADMA,cAAeC,EACrB,EADqBA,aAAcC,EACnC,EADmCA,kBAAmBC,EACtD,EADsDA,eAE1D,OACE,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,uCACW,IACT,0BACEA,UAAWA,IAAU,CACnB,eAAgBD,EAChB,eAAgBA,KAGjBF,GACK,KAEV,oCAAS,kBAAC,IAAD,CAAQI,OAAO,oBAAoBH,KAE9C,yBAAKE,UAAU,YACb,kBAAC,IAAD,CAAME,GAAE,kBAAaN,GAAiBI,UAAU,qBAAhD,sBCxBK,SAASG,IACtB,OACE,yBAAKH,UAAU,QACb,2BACE,0BAAMA,UAAU,yBADlB,cAGA,2BACE,0BAAMA,UAAU,wBADlB,Y,oNCFN,IAAMI,EAAiBC,IAAH,KAuCLC,EA5Bf,iLAEI,OACE,kBAAC,WAAD,KACE,wBAAIN,UAAU,uBAAd,YACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOO,MAAOH,IACX,YAA+B,IAA5BI,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClB,OAAIF,EACK,2CAELC,GACFE,QAAQC,IAAIH,GAGZ,kBAAC,WAAD,KACGC,EAAKJ,SAASO,KAAI,SAAAlB,GAAM,OACvB,kBAAC,EAAD,CAAYmB,IAAKnB,EAAOC,cAAeD,OAAQA,iBAjBjE,GAA8BoB,a,sXCX9B,IAAMC,EAAeX,IAAH,KAiFHV,EAhEf,iLACY,IACFC,EAAkBqB,KAAKC,MAAMC,MAAMC,OAAnCxB,cAEN,OADAA,EAAgByB,SAASzB,GAEvB,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAOW,MAAOS,EAAcM,UAAW,CAAE1B,mBACtC,YAA+B,IAA5BY,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClB,GAAIF,EACF,OAAO,0CAELC,GACFE,QAAQC,IAAIH,GALe,MAazBC,EAAKf,OALPE,EAR2B,EAQ3BA,aACAD,EAT2B,EAS3BA,cACA2B,EAV2B,EAU3BA,YACAxB,EAX2B,EAW3BA,eAX2B,IAY3ByB,OAAUC,EAZiB,EAYjBA,UAAWC,EAZM,EAYNA,YAAaC,EAZP,EAYOA,YAEpC,OACE,6BACE,wBAAI3B,UAAU,kBACX,IACD,0BAAMA,UAAU,aAAhB,YAFF,IAE+CH,GAE/C,wBAAIG,UAAU,QAAd,kBACA,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,mBAAd,kBACkBJ,GAElB,wBAAII,UAAU,mBAAd,gBACgBuB,GAEhB,wBAAIvB,UAAU,mBAAd,qBACqB,IACnB,0BACEA,UAAWA,IAAU,CACnB,eAAgBD,EAChB,eAAgBA,KAGjBA,EAAiB,MAAQ,QAIhC,wBAAIC,UAAU,QAAd,kBACA,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBAAd,cAA4CyB,GAC5C,wBAAIzB,UAAU,mBAAd,gBAA8C0B,GAC9C,wBAAI1B,UAAU,mBAAd,gBAA8C2B,IAElD,6BACA,kBAAC,IAAD,CAAMzB,GAAG,IAAIF,UAAU,qBAAvB,iBAtDhB,GAA4Be,aCftBa,EAAS,IAAIC,IAAa,CAC9BC,IAAK,aA0BQC,EAvBH,WACR,OACE,kBAAC,IAAD,CAAgBH,OAAQA,GACtB,kBAAC,IAAD,KACE,yBAAK5B,UAAU,aACb,yBACEgC,IAAKC,IACLC,IAAI,cACJC,MAAO,CACLC,MAAO,IACPC,QAAS,QACTC,OAAQ,OACRC,UAAW,UAGf,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,yBAAyBC,UAAWE,QCxBlEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8c14a6d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4edc02c8.png\";","import React from \"react\";\nimport className from \"classnames\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\n\nconst launchItem = ({\n  launch: { flight_number, mission_name, launch_date_local, launch_success }\n}) => {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h4>\n            Mission:{\" \"}\n            <span\n              className={className({\n                \"text-success\": launch_success,\n                \"text-danger\": !launch_success\n              })}\n            >\n              {mission_name}\n            </span>{\" \"}\n          </h4>\n          <p>Date: <Moment format=\"MM-DD-YYYY HH:MM\">{launch_date_local}</Moment></p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default launchItem;","import React from \"react\";\n\nexport default function missionKey() {\n  return (\n    <div className=\"my-3\">\n      <p>\n        <span className=\"px-3 mr-2 bg-success\" /> = Success\n      </p>\n      <p>\n        <span className=\"px-3 mr-2 bg-danger\" /> = Fail\n      </p>\n    </div>\n  );\n}\n","import React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport LaunchItem from \"./launchItem\";\nimport MissionKey from \"./missionKey\";\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nexport class launches extends Component {\n  render() {\n    return (\n      <Fragment>\n        <h2 className=\"display-4 my-3 mt-5\">Launches</h2>\n        <MissionKey />\n        <Query query={LAUNCHES_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) {\n              return <h4>Loading...</h4>;\n            }\n            if (error) {\n              console.log(error);\n            }\n            return (\n              <Fragment>\n                {data.launches.map(launch => (\n                  <LaunchItem key={launch.flight_number} launch={launch} />\n                ))}\n              </Fragment>\n            );\n          }}\n        </Query>\n      </Fragment>\n    );\n  }\n}\n\nexport default launches;\n","import React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport className from \"classnames\";\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\n\nexport class launch extends Component {\n  render() {\n    let { flight_number } = this.props.match.params;\n    flight_number = parseInt(flight_number);\n    return (\n      <Fragment>\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n          {({ loading, error, data }) => {\n            if (loading) {\n              return <h4>Loading...</h4>;\n            }\n            if (error) {\n              console.log(error);\n            }\n            const {\n              mission_name,\n              flight_number,\n              launch_year,\n              launch_success,\n              rocket: { rocket_id, rocket_name, rocket_type }\n            } = data.launch;\n            return (\n              <div>\n                <h1 className=\"display-4 my-3\">\n                  {\" \"}\n                  <span className=\"text-dark\">Mission:</span> {mission_name}\n                </h1>\n                <h4 className=\"mb-3\">Launch Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Flight Number: {flight_number}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Year: {launch_year}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Successful:{\" \"}\n                    <span\n                      className={className({\n                        \"text-success\": launch_success,\n                        \"text-danger\": !launch_success\n                      })}\n                    >\n                      {launch_success ? \"Yes\" : \"No\"}\n                    </span>\n                  </li>\n                </ul>\n                <h4 className=\"my-3\">Rocket Details</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                    <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n                    <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n                </ul>\n                <hr />\n                <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\n              </div>\n            );\n          }}\n        </Query>\n      </Fragment>\n    );\n  }\n}\n\nexport default launch;\n","import React from \"react\";\nimport logo from \"./logo.png\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Launches from \"./components/launches\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Launch from \"./components/launch\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\"\n});\n\nconst App = () => {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <div className=\"container\">\n            <img\n              src={logo}\n              alt=\"SpaceX logo\"\n              style={{\n                width: 300,\n                display: \"block\",\n                margin: \"auto\",\n                marginTop: \"10px\"\n              }}\n            />\n            <Route exact path=\"/\" component={Launches} />\n            <Route exact path=\"/launch/:flight_number\" component={Launch} />\n          </div>\n        </Router>\n      </ApolloProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}